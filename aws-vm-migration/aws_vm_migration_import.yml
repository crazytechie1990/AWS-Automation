- name: Playbook to Import VM on to AWS.
  hosts: localhost

  vars_files:
  - /home/controller/ansible_playbooks/ansible_aws_migration/external_vars.yml

  tasks:

    - name: Create an S3 bucket to upload the exported OVA.
      amazon.aws.s3_bucket:
        name: "{{ aws_bucket_name }}"
        state: present
        encryption: aws:kms
      tags:
      - bucket_create


    - name: Upload an object to the  bucket
      aws_s3:
        bucket: "{{ aws_bucket_name }}"
        object: "{{ ObjectDestination }}"
        src: "{{ ObjectSource }}"
        mode: put
        overwrite: never
      tags:
        - bucket_upload
   

    - name: Create IAM user with API Keys.
      community.aws.iam:
        iam_type: user
        name: sachin
        state: present
        password: "{{ temp_pass }}"
        trust_policy_filepath: trust-policy.json
        access_key_state: create

    - name: Create IAM role
      community.aws.iam:
        iam_type: role
        name: vmimport
        state: present
        trust_policy:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Principal:
              Service: vmie.amazonaws.com
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                sts:Externalid: vmimport

    - name: Attach inline IAM policy for the role 
      community.aws.iam_policy: 
        iam_type: role
        iam_name: vmimport
        state: present
        policy_name: vmimport
        policy_json: " {{ lookup( 'file', 'role_policy.json') }} "
        
    - name: Use the following command to import an image with a single disk.
      shell: |
        aws ec2 import-image --description "MyserverVM" --disk-containers "file://containers.json" --tag-specifications ResourceType=import-image-task,Tags="{Key=name,Value=ansible_ami}"
      register: result
      tags:
          - import_ami

    - ansible.builtin.debug:
        var: result

    - name: Please note this is not a failure, import of an AMI takes a while so the playbook will not proceed until the AMI is imported.
      shell: | 
        aws ec2 describe-import-image-tasks --import-task-ids import-ami-0903237399860f8d3
      register: output
      retries: 30
      delay: 60
      until: output.stdout_lines[16].split(':')[1] == "completed "
      tags:
        - import_describe
    
    - name: Image find
      ec2_ami_info:
        filters:
          "tag:Name": ansible_ami
      register: ami_find
    
    - ansible.builtin.debug:
        var: "{{ ami_find }}"

    
